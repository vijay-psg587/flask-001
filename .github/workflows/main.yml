# This is a basic workflow to help you get started with Actions

name: flask-aws-STS

# Controls when the workflow will run
on:
    # Triggers the workflow on push or pull request events but only for the main branch
    push:
        branches:
            - main

    # Allows you to run this workflow manually from the Actions tab
    # workflow_dispatch:

# THis is required for OIDC configuration
permissions:
    id-token: write # required to use OIDC authentication
    contents: read # required to checkout the code from the repo

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build_and_deploy:
        # We can use this for docker build if any of ECS is being chosen
        runs-on: ubuntu-latest
        steps:
            - name: Checkout the source Code
              uses: actions/checkout@v2

            - name: configure aws credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  role-to-assume: arn:aws:iam::239374439066:role/githublambdaSTS
                  role-duration-seconds: 1000 # the ttl of the session, in seconds.
                  role-session-name: FlaskDeployment
                  aws-region: ap-south-1 # use your region here.
            - name: Setup Node
              uses: actions/setup-node@v2
              with:
                  node-version: "14"
            - name: Setup Python
              uses: actions/setup-python@v2
              with:
                  python-version: 3.7
            - run: |
                  pip --version
                  npm i -g serverless
                  serverless plugin install -n serverless-python-requirements@4.1.1
                  serverless plugin install -n serverless-wsgi
                  SLS_DEBUG=* sls deploy --stage dev

                  SLS_DEBUG=* sls remove --stage dev
